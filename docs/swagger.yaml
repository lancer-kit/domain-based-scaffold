swagger: '2.0'
info:
  version: '0.1'
  title: Scaffold Servise
  description: 'Base for other projects'

host: localhost:2490

schemes:
- http

basePath: /dev

security:
- User: []
- Jwt: []

produces:
- application/json

consumes:
- application/json

paths:
  /buzz:
    post:
      tags:
      - post
      summary: Add new raw in db
      parameters:
      - name: param
        in: query
        description: Query param for middleware
        required: true
        type: string
      - name: json
        in: body
        description: Buzz object that needs to be added to the database
        required: false
        schema:
          $ref: "#/definitions/PostJSON"
      responses:
        201:
          description: 'Raw was successfully added'
          schema:
            $ref: "#/definitions/PostJSON"
        400:
          $ref: "#/responses/UnauthorizedError"
        404:
          $ref: "#/responses/NotFoundError"
    get:
      tags:
      - getAll
      summary: Returns number of rows from database
      parameters:
      - name: param
        in: query
        description: Query param for middleware
        required: true
        type: string
      - name: order
        in: query
        description: Order of objects
        required: false
        type: string
      - name: pageSize
        in: query
        description: Query param for setting number of elements on the page
        required: false
        type: integer
      - name: page
        in: query
        description: Query param for setting page number
        required: false
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/PaginationParam"
        400:
          $ref: "#/responses/UnauthorizedError"
        404:
          $ref: "#/responses/BadParam"

  /middleware:
    get:
      tags:
      - middleware
      summary: Verify middleware
      parameters:
      - name: param
        in: query
        description: Query param for middleware
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
            example: "test"
        400:
          $ref: "#/responses/UnauthorizedError"

  /buzz/{buzzId}:
    delete:
      tags:
      - delete
      summary: Delete raw from database
      parameters:
      - name: param
        in: query
        description: Query param for middleware
        required: true
        type: string
      - name: buzzId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            type: string
            example: "success"
        400:
          $ref: "#/responses/UnauthorizedError"
        404:
          $ref: "#/responses/BadId"

    put:
      tags:
      - put
      summary: Update raw in database
      parameters:
      - name: param
        in: query
        description: Query param for middleware
        required: true
        type: string
      - name: buzzId
        in: path
        required: true
        type: integer
      - name: json
        in: body
        description: Buzz object for updating existing raw in database
        required: false
        schema:
          $ref: "#/definitions/PostJSON"
      responses:
        200:
          description: successful operation
          schema:
            properties:
              description:
                type: string
                example: "new description"
        400:
          $ref: "#/responses/UnauthorizedError"
        404:
          $ref: "#/responses/BadId"
    get:
      tags:
      - get
      summary: Returns buzz_feed with buzzId
      parameters:
      - name: param
        in: query
        description: Query param for middleware
        required: true
        type: string
      - name: buzzId
        in: path
        required: true
        type: integer
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/PaginationParam"
        400:
          $ref: "#/responses/UnauthorizedError"
        404:
          $ref: "#/responses/BadId"


definitions:
  PostJSON:
    properties:
      name:
        type: string
        example: 'test'
      buzzType:
        type: string
        example: 'testA'
      description:
        type: string
        example: 'test object'
  ReturnedJSON:
    properties:
      id:
        type: integer
        format: int64
        example: 1
      name:
        type: string
        example: 'test'
      buzzType:
        type: string
        example: 'testA'
      description:
        type: string
        example: 'test object'
      details:
        type: object
        example: {}
      createdAt:
        type: integer
        format: int
        example: 0
      updatedAt:
        type: integer
        format: int
        example: 0
  PaginationParam:
    properties:
      page:
        type: integer
        format: int64
        example: 1
      pageSize:
        type: integer
        format: int64
        example: 10
      order:
        type: string
        example: "asc"
      total:
        type: integer
        format: int64
        example: 10
      records:
        type: array
        items:
          $ref: "#/definitions/ReturnedJSON"


responses:
  UnauthorizedError:
    examples:
      no_token:
        "errcode": 400
        "errmsg": "JWT Header must not bee empty"
        "data": null
      token_is_invalid:
        "errcode": 400
        "errmsg": "JWT Header is invalid json"
        "data": null
      bad_param:
        "errcode": 400
        "errmsg": "Wrong param"
        "data": null
    description: "Autorization header invalid or bad param for middleware"
  NotFoundError:
    examples:
      bad_body:
        "errcode": 404
        "errmsg": "Bad body structure"
        "message": "Not Found"
    description: "Bad body structure"
  BadParam:
    examples:
      bad_param:
        "errcode": 404
        "errmsg": "Wrong parameters"
        "message": "Not Found"
      not_existing:
        "errcode": 404
        "message": "Not Found"
        "errmsg": "Can not find records"
    description: "Wrong parameters in url"
  BadId:
    examples:
      incorrect_id:
        "errcode": 404
        "message": "Not Found"
        "errmsg": "wrong id"
      bad_body:
        $ref: "#/responses/NotFoundError/examples/bad_body"
      not_existing:
        "errcode": 404
        "message": "Not Found"
        "errmsg": "Cant found buzz with such user Id"
    description: "Wrong id"


securityDefinitions:
  Jwt:
    type: apiKey
    in: header
    name: Jwt
    description: '{\\"jti\\":\\"1\\"} - use it without proxy; When using curl escape double quotes'
  User:
    type: apiKey
    in: header
    name: Authorization
    description: "Get from POST:{USER-API}/login/ OR POST:{USER-API}/auth/ OR POST:{USER-API}/verify/password/"